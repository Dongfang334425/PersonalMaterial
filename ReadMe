Git Introduction:
  https://git-scm.com/book/zh/v2
Learn again default constructor.


可以挑选2-3个做过的有典型性的项目做一个仔细技术回顾和自己独到的理解

为什么我可以take 这个owner的角色：
	1. 我对模块的每一个功能的具体实现我都能研究得很清楚。比如，这块屏幕，当相应的报警消息逻辑被触发后，比如引擎着火了，ENGINE FIRE。这个在车载系统里也有类似的，它是怎样以最高优先级的形式，插入到消息列表里的。我们用的是双链表。另外，如果我现在用鼠标去控制，想要下拉这个消息列表。接收到这个鼠标的消息事件后，消息列表里的这些消息，我们分等级，是警告级，警示级，建议级，状态级，这每一级的消息的表现形式会是怎样的。具体设计实现我都清楚。我也能复现。而不是像初级工程师那样各种逻辑判断都需要训练两年。
	2. 我有很好的沟通能力和解决问题的能力，可以高质量地按日期完成项目。从两年前就开始负责功能模块的项目了，按优先级分配任务，与国外应用工程师或者客户沟通不在话下，处理技术问题。如果遇到我没有能力解决的情况，我也会去寻求帮助解决。
	3. 我有很好的创新能力。因为我熟悉代码，也熟悉功能，这两年我每一年都会向公司提供一个创新性想法。所以去年拿到了公司的优秀发明披露奖。
	4. 去年也拿到了公司杰出青年工程师的奖。这个奖含金量也很高，每个部门推选最优的来竞争。
	
DU Wrap：DU Display Unit显示设备的意思 Wrap:隐藏，也可以理解为保护的意思。
简单的介绍一下，就是DU WRAP的核心是我们需要去监控一些核心的数据在显示设备上是否正常。更细化一些的话就是在飞行时候显示的这些像素点是否是我们工程师认为的正常的像素点。如果不是，那这显示设备就是出现了问题，这在飞行时是很危险的事情。
怎么做的呢，。以燃油量为例，燃油量是飞行过程中一个非常重要的指标。我们工程师在开发阶段，经过一个大的功能模块GGF（Graphic Generic Function）显示系统开发完燃油量相关逻辑之后，就会收集正常的像素点。我们会正常运作每种逻辑，用开发好的程序去捕获这些像素点。抓取像素点的API是由DU供应商提供的。以0这个数字为例，它的每一种显示情况会以如下的方式被抓取出来，用的是2个32 位unsigned int 的数值表示。然后按数值的大小进行排序。然后所有的像素点会被保存在一个文件中。在飞行阶段，我们会有一个大的功能模块叫AGMCAL (AGM Control Abstraction Layer)，去实时捕获显示屏的这些像素点，然后以一定的传输协议显示在我们的数据库中。然后，由告警系统去解析这些实时数据，并与之前保存的文件里的值做比较，如有不同，就发出报警信息。要知道，这代码功能的复杂度是很高的，很多工作10年的资深工程师都不了解全貌，但我可以。我行，我敢，我上。

这算是对我的这几年我的工作能力的一个综合体现，闪光点具体在哪儿：
	1. 对嵌入式系统显示和告警系统的功能架构要有很深的了解。它们是一个比较成熟的系统了，这两块功能代码量应该在百万级不会差。比如，进程与进程之间通过什么方式交互，我们用IPC。线程怎样创建，我们有一套独立的线程创建系统，线程之间怎样共享变量，每个线程主要负责的功能是什么。触发逻辑的信号怎样从数据库经过源选变成逻辑的输入，复杂的逻辑怎样处理，处理的逻辑怎样与显卡做交互。遇到键盘输入，鼠标触发，按钮，翻滚这些消息事件后，我们应该怎样处理。大型软件的makefile应该怎样写。大型软件怎样分层以遵循设计模式里的封闭开放原则。怎样做单元测试，集成测试、系统测试等等。工作这几年，我可以以高质量的代码，满足所有项目的截止日期。
	2. 对比特位、二分搜索法、双链表等算法实际运用的了解。比如比特位怎样用于协议传输。双链表怎样用于信息的显示。
	3. 对OPENGL的了解。因为比较成熟，我们有专门的画图工具专门生成OPENGL的代码。但我不甘于只是用工具，特意去学了OPENGL的基础，现在2D的都没问题，3D渲染是我2021年上的进阶方向。我觉得问题应该不大，因为我大学的时候还处理过复杂的液态的3D模型，研究生的时候研究的是固体和气体的3D模型，基础在那里，没有办法。那时候矩阵运用还比较熟练。你们可以去看看我的GITHUB。
	4. 对MATLAB的了解。告警系统有一部分信号逻辑是涉及到用MATLAB做处理的。
	5. 有很好的寻求资源解决问题的能力。横跨三个部门，显示系统和告警系统我都有能力负责，但AGMCAL不是中国团队负责的，所以资料很有限。我当时为了找这个AGMCAL和告警系统的传输协议，寻着蛛丝马迹找了很久很久。
	6. 带人的能力。我自己最初攻克这个难题后，我就不自己做了，而是分配给比较初级的工程师做了，自己主要把控代码质量。


	



最近另一个比较有意思的事情是做了层级拆分：
我们原来的代码基本上是一套代码满足一个客户，就是一个飞机制造商。现在不了，因为在寻求通用航空的市场，我们在尽可能想让一套代码满足多个客户，赚更多的钱。所以我们对软件结构做了调整，把每个客户都通用的需求放在了通用层，然后给开辟了独立的空间，就是动态链接库。每个客户都有独立的逻辑，但base address是一样的。最后集成交付的时候集成不同的动态链接库就好了。我之前只是用过动态链接库，还有静态链接库。但怎么写动态链接库还是第一次。makefile怎样调整是比较重要的事情。动态链接库有专门的编译命令。然后对于大型软件来讲，怎么写好makefile也是一门学问。不是简单的target, dependancy, command. 因为一两个文件的小程序可以这么做。对于大型软件来讲，你就要考虑include 路径的规划，在不同的时候使用不同的语法规则，是否可以尽量避免重复的语法命令，而是用通用的语法命令进行替代。毕竟，你不可能加一个.cpp文件就要来改一次makefile吧。什么subst, fooeach啊，$@ $<之类的。



我负责功能范围的代码量：几十万行吧。任何地方出了问题，或者需要更新，都找我。

我做的开发主要是逻辑的开发和架构的修改，希望有机会之后去做一个全新的设计，或者说能够重构代码，因为我们的代码重构成本太大，包括开发成本，测试成本，验证成本。我之前没有这个机会，希望新工作能有。

如果我能够对导航这块有更深入的了解，那我这个人的在出行显示界面这块领域应该来说技能树应该是很有竞争力了，这也是我未来期盼的一个方向。

我看了一下阿里的P6要求，对于复杂问题的解决有自己的见解，对于问题的识别、优先级分配有见解、善于寻求资源解决问题，也常常因为对于工作的熟练而有创新的办法，表现出解决问题的能力。
可在一定指导下独立领导跨部门的项目，能够培训和教导新员工。我觉得我都满足。

